{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Layout/Layout.module.css","components/FilterForm/FilterForm.module.css","redux/theme/themeActions.js","redux/theme/themeReduser.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","components/Header/Header.js","components/Layout/Layout.js","components/InputForm/InputForm.js","components/Contacts/ContactListItem/ContactListItem.js","components/Contacts/Contacts.js","components/FilterForm/FilterForm.js","pages/PhoneBookPage.js","components/App.js","index.js","components/InputForm/InputForm.module.css","components/Header/Header.module.css","components/Contacts/ContactListItem/ContactIlstItem.module.css"],"names":["module","exports","toggleTheme","createAction","theme","createReducer","state","addContact","name","number","payload","contactInfo","id","uuidv4","removeContact","filteredContacts","clearFilterValue","contactsBase","type","filter","element","action","combineReducers","store","configureStore","reducer","themeReducer","contacts","phoneBookReducer","mapDispatchToProps","onToggle","connect","className","styles","Header","Title","TitleDark","Button","ButtonDark","onClick","TextDark","children","Layout","LayoutDark","InputForm","getInputValue","target","value","setState","hendleSubmit","e","preventDefault","checkedDoubleInput","alert","props","getInfo","some","contact","this","Form","onSubmit","placeholder","onChange","title","Submit","SubmitDark","Component","dispatch","item","find","ownProps","onRemove","ListElement","ListElementDark","visibleContacts","toLowerCase","includes","elements","list","length","map","key","onSearchQuery","onClearValue","filterValue","search","PhoneBookPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d02e9d76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__14-hX\",\"Title\":\"Contacts_Title__2D9jM\",\"TitleDark\":\"Contacts_TitleDark__1mLx0 Contacts_Title__2D9jM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1VOhB\",\"LayoutDark\":\"Layout_LayoutDark__EKXRb Layout_Layout__1VOhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"FilterForm_search__3Xshf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst toggleTheme = createAction('theme/toggleTheme');\r\n\r\nexport { toggleTheme };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { toggleTheme } from './themeActions';\r\n\r\nconst theme = createReducer(true, {\r\n  [toggleTheme]: state => !state,\r\n});\r\n\r\nexport default theme;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('phoneBook/add', (name, number) => ({\r\n  payload: {\r\n    contactInfo: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction('phoneBook/remove');\r\n\r\nconst filteredContacts = createAction('phoneBook/filtered');\r\n\r\nconst clearFilterValue = createAction('phoneBook/clearValue');\r\n\r\nexport { addContact, removeContact, filteredContacts, clearFilterValue };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContact,\r\n  removeContact,\r\n  filteredContacts,\r\n  clearFilterValue,\r\n} from './phoneBookActions';\r\n\r\nconst contactsBase = createReducer([], {\r\n  [addContact.type]: (state, { payload }) => [...state, payload.contactInfo],\r\n  [removeContact.type]: (state, { payload }) =>\r\n    state.filter(element => payload !== element.id),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [clearFilterValue.type]: (state, action) => '',\r\n  [filteredContacts.type]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contactsBase, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport themeReducer from './theme/themeReduser';\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: { theme: themeReducer, contacts: phoneBookReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleTheme } from '../../redux/theme/themeActions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Header.module.css';\r\n\r\nconst Header = ({ theme, onToggle }) => (\r\n  <>\r\n    <div className={styles.Header}>\r\n      <h1 className={theme ? styles.Title : styles.TitleDark}>Phone Book</h1>\r\n    </div>\r\n    <button\r\n      className={theme ? styles.Button : styles.ButtonDark}\r\n      type=\"button\"\r\n      onClick={() => onToggle()}\r\n    >\r\n      {theme ? 'Dark' : 'Light'}\r\n    </button>\r\n    <p className={theme ? null : styles.TextDark}>\r\n      Active theme {theme ? 'Light' : 'Dark'}\r\n    </p>\r\n  </>\r\n);\r\n\r\nHeader.propTypes = {\r\n  theme: PropTypes.bool.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({ theme: state.theme });\r\n\r\nconst mapDispatchToProps = {\r\n  onToggle: toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport Header from '../Header';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children, theme }) => (\r\n  <div className={theme ? styles.Layout : styles.LayoutDark}>\r\n    <Header />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = ({ theme }) => ({ theme });\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phoneBook/phoneBookActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './InputForm.module.css';\r\n\r\nclass InputForm extends Component {\r\n  static propTypes = {\r\n    theme: PropTypes.bool.isRequired,\r\n    getInfo: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  getInputValue = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  hendleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.checkedDoubleInput(this.state.name)) {\r\n      alert(`${this.state.name} есть в книге`);\r\n      return;\r\n    }\r\n    this.props.getInfo(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  checkedDoubleInput = name => {\r\n    return this.props.contacts.some(contact => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { theme } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <form className={styles.Form} onSubmit={this.hendleSubmit}>\r\n          <label>\r\n            <h3 className={theme ? styles.Title : styles.TitleDark}>Name:</h3>\r\n            <input\r\n              value={name}\r\n              placeholder=\"Enter name...\"\r\n              name=\"name\"\r\n              onChange={this.getInputValue}\r\n            />\r\n            <h3 className={theme ? styles.title : styles.TitleDark}>\r\n              Phone number:\r\n            </h3>\r\n            <input\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.getInputValue}\r\n              placeholder=\"Enter phone...\"\r\n            />\r\n            <br />\r\n            <button\r\n              className={theme ? styles.Submit : styles.SubmitDark}\r\n              type=\"submit\"\r\n            >\r\n              Add contact\r\n            </button>\r\n            <br />\r\n          </label>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: state.theme,\r\n  contacts: state.contacts.contactsBase,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  getInfo: ({ name, number }) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { removeContact } from '../../../redux/phoneBook/phoneBookActions';\r\nimport styles from './ContactIlstItem.module.css';\r\n\r\nfunction ContactListItem({ name, number, theme, onRemove }) {\r\n  return (\r\n    <li className={theme ? styles.ListElement : styles.ListElementDark}>\r\n      {name} {number}\r\n      <button\r\n        type=\"button\"\r\n        className={theme ? styles.Button : styles.ButtonDark}\r\n        onClick={onRemove}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  theme: PropTypes.bool.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ theme, contacts }, { id }) => {\r\n  const item = contacts.contactsBase.find(element => element.id === id);\r\n  return {\r\n    theme,\r\n    ...item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ elements, theme }) => {\r\n  return (\r\n    <>\r\n      <h2 className={theme ? styles.Title : styles.TitleDark}>Contacts</h2>\r\n      <ul className={styles.list}>\r\n        {elements.length > 0\r\n          ? elements.map(({ id }) => <ContactListItem key={id} id={id} />)\r\n          : null}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  elements: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contactsBase, filter } = state.contacts;\r\n  const visibleContacts = contactsBase.filter(element =>\r\n    element.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return {\r\n    theme: state.theme,\r\n    elements: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  filteredContacts,\r\n  clearFilterValue,\r\n} from '../../redux/phoneBook/phoneBookActions';\r\nimport styles from './FilterForm.module.css';\r\n\r\nfunction FilterForm({ filterValue, contacts, onClearValue, onSearchQuery }) {\r\n  if (contacts.length === 1) {\r\n    onClearValue();\r\n  }\r\n  return (\r\n    <label className={styles.search}>\r\n      {contacts.length > 1 && (\r\n        <input\r\n          value={filterValue}\r\n          onChange={e => onSearchQuery(e.target.value)}\r\n        />\r\n      )}\r\n    </label>\r\n  );\r\n}\r\n\r\nFilterForm.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  onSearchQuery: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filterValue: state.contacts.filter,\r\n  contacts: state.contacts.contactsBase,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onSearchQuery: filteredContacts,\r\n  onClearValue: clearFilterValue,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterForm);\r\n","import React from 'react';\r\nimport InputForm from '../components/InputForm';\r\nimport Contacts from '../components/Contacts';\r\nimport FilterForm from '../components/FilterForm';\r\n\r\nconst PhoneBookPage = () => {\r\n  return (\r\n    <>\r\n      <InputForm />\r\n      <FilterForm />\r\n      <Contacts />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhoneBookPage;\r\n","import React from 'react';\r\nimport Layout from './Layout';\r\nimport PhoneBookPage from '../pages/PhoneBookPage';\r\n\r\nconst App = () => (\r\n  <Layout>\r\n    <PhoneBookPage />\r\n  </Layout>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputForm_Form__bb-wE\",\"Submit\":\"InputForm_Submit__3WzIE\",\"SubmitDark\":\"InputForm_SubmitDark__FvoF5 InputForm_Submit__3WzIE\",\"Title\":\"InputForm_Title__hE7js\",\"TitleDark\":\"InputForm_TitleDark__2Zc3E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1OsM8\",\"Title\":\"Header_Title__2YF19\",\"TitleDark\":\"Header_TitleDark__3CZ8- Header_Header__1OsM8\",\"Button\":\"Header_Button__2LPRp\",\"ButtonDark\":\"Header_ButtonDark__2ma62 Header_Button__2LPRp\",\"TextDark\":\"Header_TextDark__3FIZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListElement\":\"ContactIlstItem_ListElement__-fhFz\",\"ListElementDark\":\"ContactIlstItem_ListElementDark__M_ar4 ContactIlstItem_ListElement__-fhFz\",\"Button\":\"ContactIlstItem_Button__2NVuV\",\"ButtonDark\":\"ContactIlstItem_ButtonDark__Crcm5 ContactIlstItem_Button__2NVuV\"};"],"sourceRoot":""}